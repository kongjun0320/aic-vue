{"version":3,"file":"vue.js","sources":["../../src/compiler/parse-html.js","../../src/compiler/index.js","../../src/utils/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// a-0a\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\n/*\n  ?: -> 匹配不捕获\n  (?:${ncname}\\\\:)  ?    ${ncname}\n  <aa:ba>\n*/\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\n/*\n  标签开头的正则\n*/\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\n/*\n  结束标签\n*/\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\n/*\n  匹配属性\n*/\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\n/*\n  匹配标签结束\n  */\nconst startTagClose = /^\\s*(\\/?)>/\n/*\n  匹配双大括号\n*/\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nlet root // ast 语法树的树根\nlet currentParent // 标识当前的父亲\nconst stack = []\nconst ELEMENT_TYPE = 1\nconst TEXT_TYPE = 3\n\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: ELEMENT_TYPE,\n    children: [],\n    attrs,\n    parent: null\n  }\n}\n\nfunction start(tagName, attrs) {\n  // console.log(`开始标签: ${tagName}, 属性是: ${JSON.stringify(attrs)}`)\n  const element = createASTElement(tagName, attrs)\n  if (!root) {\n    root = element\n  }\n  currentParent = element\n  stack.push(element)\n}\nfunction chars(text) {\n  // console.log(`文本是: ${text}`)\n  text = text.replace(/\\s/g, '')\n  if (text) {\n    currentParent.children.push({\n      text,\n      type: TEXT_TYPE\n    })\n  }\n}\nfunction end(tagName) {\n  // console.log(`结束标签: ${tagName}`)\n  const element = stack.pop()\n  currentParent = stack[stack.length - 1]\n\n  if (currentParent) {\n    element.parent = currentParent\n    currentParent.children.push(element)\n  }\n}\n\nexport function parseHTML(html) {\n  while (html) {\n    const textEnd = html.indexOf('<')\n    // 如果索引为0 肯定是一个标签 开头/结尾\n    if (textEnd === 0) {\n      // 通过这个方法获取匹配到的结果 tagName attrs\n      const startTagMatch = parseStartTag()\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        // 如果开始标签匹配完毕后 继续下一次匹配\n        continue\n      }\n      // <h3/>\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n    let text\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd)\n    }\n    // 文本\n    if (text) {\n      advance(text.length)\n      chars(text)\n    }\n  }\n\n  function advance(n) {\n    html = html.substring(n)\n  }\n\n  function parseStartTag() {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      // 标签\n      advance(start[0].length)\n      let end, attr\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        // 将属性进行解析\n        advance(attr[0].length)\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || att[4] || attr[5]\n        })\n      }\n      if (end) {\n        // 结束标签 >\n        advance(end[0].length)\n        return match\n      }\n    }\n  }\n\n  return root\n}\n","/*\n  ast 语法树 是用对象来描述原生语法的\n  虚拟 DOM 用对象来描述 dom 节点\n*/\n\nimport { parseHTML } from './parse-html'\n\nexport function compileToFunction(template) {\n  // 解析 html 字符串，将html字符串 -> ast 语法树\n  const root = parseHTML(template)\n  console.log(root)\n  return function render() {}\n}\n","export function isObject(value) {\n  return typeof value === 'object' && value !== null\n}\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}\n","/*\n  数组响应式采用 iop 思想去拦截数组的方法\n  覆盖会修改原数组的方法\n*/\n// 待覆盖的方法\nconst methods = ['push', 'shift', 'unshift', 'pop', 'splice', 'reverse', 'sort']\n// 数组原型方法\nconst arrayPrototype = Array.prototype\n/**\n 使用 Object.create 创建一个原型指向数组原型的对象\n 用此方法去覆盖需要响应式处理的数组原型( data.__proto__ = arrayMethods)\n */\nconst arrayMethods = Object.create(arrayPrototype)\n/*\n  为 arrayMethods 添加需要重写的数组方法，当数组调用 methods 会调用 arrayMethods 方法\n  如果是调用非 methods 方法，则还是调用 arrayMethods 原型中的方法（也就是数组原型的方法）\n*/\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    console.log('数组收集', this)\n    const result = arrayPrototype[method].apply(this, args)\n    const ob = this.__ob__\n    /*\n      当调用数组 push/unshift/splice 等方法时，会新增数组元素，针对新增的用户元素\n      也需要做响应式处理\n    */\n    let inserted\n\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(3)\n        break\n      default:\n        break\n    }\n\n    if (inserted) {\n      ob.observerArray(inserted)\n    }\n\n    return result\n  }\n})\n\nexport default arrayMethods\n","import { def, isObject } from '../utils/index'\nimport arrayMethods from './array'\n\nexport function observe(data) {\n  if (!isObject(data)) {\n    return\n  }\n\n  return new Observer(data)\n}\n\nclass Observer {\n  /*\n    首先需要明白一点： 数组是可以被 Object.defineProperty 劫持的 但是会存在性能问题\n    1、Object.defineProperty 会对数组的索引进行拦截\n    2、不会对数组的方法进行拦截\n    3、开发者更多的时候是使用数组的方法操作数组 而不是使用索引\n  */\n  constructor(value) {\n    // 为每个响应式数据添加一个 __ob__ 属性，标识已经被响应式处理过了\n    def(value, '__ob__', this)\n\n    if (Array.isArray(value)) {\n      value.__proto__ = arrayMethods\n      this.observerArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n  walk(data) {\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]))\n  }\n  observerArray(data) {\n    data.forEach((item) => observe(item))\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  // 深度观测\n  observe(value)\n\n  Object.defineProperty(data, key, {\n    get() {\n      console.log('收集依赖: ', key)\n      return value\n    },\n    set(newVal) {\n      if (newVal === value) {\n        return\n      }\n      console.log('触发更新: ', key)\n      // 新设置的值 也需要观测\n      observe(newVal)\n      value = newVal\n    }\n  })\n}\n","import { observe } from './observer/index'\n\nexport function initState(vm) {\n  const opts = vm.$options\n  // Vue 的数据来源 props methods data computed watch\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethods(vm)\n  }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n  let data = vm.$options.data\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data\n  /*\n    观察数据\n    通过递归遍历对 data 中的数据进行观测\n    也就是通过 Object.defineProperty 添加 getter/setter \n  */\n  observe(data)\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","import { compileToFunction } from './compiler/index.js'\nimport { initState } from './state'\n\nexport function initMixin(Vue) {\n  /*\n    初始化的工作\n    1、数据的响应式\n  */\n  Vue.prototype._init = function (options) {\n    const vm = this\n\n    vm.$options = options\n    // 初始化 state\n    initState(vm)\n\n    // 挂载\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    const options = vm.$options\n    el = document.querySelector(el)\n\n    if (!options.render) {\n      let template = options.template\n      if (!template && el) {\n        template = el.outerHTML\n      }\n\n      const render = compileToFunction(template)\n      options.render = render\n    }\n  }\n}\n","import { initMixin } from './init'\n/*\n  Vue 的构造函数\n  在使用 Vue 的过程中，我们使用 new Vue() 方式去创建 Vue 根实例\n*/\nfunction Vue(options) {\n  this._init(options)\n}\n/*\n  通过 mixin 的方式去混入方法\n*/\ninitMixin(Vue)\n\nexport default Vue\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","length","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","value","att","compileToFunction","template","console","log","render","isObject","def","data","key","Object","defineProperty","enumerable","configurable","methods","arrayPrototype","Array","prototype","arrayMethods","create","forEach","method","args","result","apply","ob","__ob__","inserted","slice","observerArray","observe","Observer","isArray","__proto__","walk","keys","defineReactive","item","get","set","newVal","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options","el","$mount","document","querySelector","outerHTML"],"mappings":";;;;;;EAAA;EACA,IAAMA,MAAM,iCAAZ;EACA;EACA;EACA;EACA;EACA;;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;EACA;EACA;EACA;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;EACA;EACA;EACA;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;EACA;EACA;EACA;;EACA,IAAMI,SAAS,GACb,2EADF;EAEA;EACA;EACA;;EACA,IAAMC,aAAa,GAAG,YAAtB;EAMA,IAAIC,IAAJ;;EACA,IAAIC,aAAJ;;EACA,IAAMC,KAAK,GAAG,EAAd;EACA,IAAMC,YAAY,GAAG,CAArB;EACA,IAAMC,SAAS,GAAG,CAAlB;;EAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;EACxC,SAAO;EACLC,IAAAA,GAAG,EAAEF,OADA;EAELG,IAAAA,IAAI,EAAEN,YAFD;EAGLO,IAAAA,QAAQ,EAAE,EAHL;EAILH,IAAAA,KAAK,EAALA,KAJK;EAKLI,IAAAA,MAAM,EAAE;EALH,GAAP;EAOD;;EAED,SAASC,KAAT,CAAeN,OAAf,EAAwBC,KAAxB,EAA+B;EAC7B;EACA,MAAMM,OAAO,GAAGR,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAAhC;;EACA,MAAI,CAACP,IAAL,EAAW;EACTA,IAAAA,IAAI,GAAGa,OAAP;EACD;;EACDZ,EAAAA,aAAa,GAAGY,OAAhB;EACAX,EAAAA,KAAK,CAACY,IAAN,CAAWD,OAAX;EACD;;EACD,SAASE,KAAT,CAAeC,IAAf,EAAqB;EACnB;EACAA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;EACA,MAAID,IAAJ,EAAU;EACRf,IAAAA,aAAa,CAACS,QAAd,CAAuBI,IAAvB,CAA4B;EAC1BE,MAAAA,IAAI,EAAJA,IAD0B;EAE1BP,MAAAA,IAAI,EAAEL;EAFoB,KAA5B;EAID;EACF;;EACD,SAASc,GAAT,CAAaZ,OAAb,EAAsB;EACpB;EACA,MAAMO,OAAO,GAAGX,KAAK,CAACiB,GAAN,EAAhB;EACAlB,EAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAACkB,MAAN,GAAe,CAAhB,CAArB;;EAEA,MAAInB,aAAJ,EAAmB;EACjBY,IAAAA,OAAO,CAACF,MAAR,GAAiBV,aAAjB;EACAA,IAAAA,aAAa,CAACS,QAAd,CAAuBI,IAAvB,CAA4BD,OAA5B;EACD;EACF;;EAEM,SAASQ,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B,SAAOA,IAAP,EAAa;EACX,QAAMC,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAhB,CADW;;EAGX,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACjB;EACA,UAAME,aAAa,GAAGC,aAAa,EAAnC;;EACA,UAAID,aAAJ,EAAmB;EACjBb,QAAAA,KAAK,CAACa,aAAa,CAACnB,OAAf,EAAwBmB,aAAa,CAAClB,KAAtC,CAAL,CADiB;;EAGjB;EACD,OAPgB;;;EASjB,UAAIoB,WAAW,GAAGL,IAAI,CAACM,KAAL,CAAW/B,MAAX,CAAlB;;EACA,UAAI8B,WAAJ,EAAiB;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAeP,MAAhB,CAAP;EACAF,QAAAA,GAAG,CAACS,WAAW,CAAC,CAAD,CAAZ,CAAH;EACA;EACD;EACF;;EACD,QAAIX,IAAI,SAAR;;EACA,QAAIO,OAAO,GAAG,CAAd,EAAiB;EACfP,MAAAA,IAAI,GAAGM,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP;EACD,KAtBU;;;EAwBX,QAAIP,IAAJ,EAAU;EACRa,MAAAA,OAAO,CAACb,IAAI,CAACI,MAAN,CAAP;EACAL,MAAAA,KAAK,CAACC,IAAD,CAAL;EACD;EACF;;EAED,WAASa,OAAT,CAAiBE,CAAjB,EAAoB;EAClBT,IAAAA,IAAI,GAAGA,IAAI,CAACQ,SAAL,CAAeC,CAAf,CAAP;EACD;;EAED,WAASL,aAAT,GAAyB;EACvB,QAAMd,KAAK,GAAGU,IAAI,CAACM,KAAL,CAAWjC,YAAX,CAAd;;EACA,QAAIiB,KAAJ,EAAW;EACT,UAAMgB,KAAK,GAAG;EACZtB,QAAAA,OAAO,EAAEM,KAAK,CAAC,CAAD,CADF;EAEZL,QAAAA,KAAK,EAAE;EAFK,OAAd,CADS;;EAMTsB,MAAAA,OAAO,CAACjB,KAAK,CAAC,CAAD,CAAL,CAASQ,MAAV,CAAP;;EACA,UAAIF,IAAJ,EAASc,IAAT;;EACA,aACE,EAAEd,IAAG,GAAGI,IAAI,CAACM,KAAL,CAAW7B,aAAX,CAAR,MACCiC,IAAI,GAAGV,IAAI,CAACM,KAAL,CAAW9B,SAAX,CADR,CADF,EAGE;EACA;EACA+B,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQZ,MAAT,CAAP;EACAQ,QAAAA,KAAK,CAACrB,KAAN,CAAYO,IAAZ,CAAiB;EACfmB,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CADK;EAEfE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAD,CAAJ,IAAWG,GAAG,CAAC,CAAD,CAAd,IAAqBH,IAAI,CAAC,CAAD;EAFjB,SAAjB;EAID;;EACD,UAAId,IAAJ,EAAS;EACP;EACAW,QAAAA,OAAO,CAACX,IAAG,CAAC,CAAD,CAAH,CAAOE,MAAR,CAAP;EACA,eAAOQ,KAAP;EACD;EACF;EACF;;EAED,SAAO5B,IAAP;EACD;;EC7ID;EACA;EACA;EACA;EAIO,SAASoC,iBAAT,CAA2BC,QAA3B,EAAqC;EAC1C;EACA,MAAMrC,IAAI,GAAGqB,SAAS,CAACgB,QAAD,CAAtB;EACAC,EAAAA,OAAO,CAACC,GAAR,CAAYvC,IAAZ;EACA,SAAO,SAASwC,MAAT,GAAkB,EAAzB;EACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECZM,SAASC,QAAT,CAAkBP,KAAlB,EAAyB;EAC9B,SAAO,QAAOA,KAAP,MAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA9C;EACD;EACM,SAASQ,GAAT,CAAaC,IAAb,EAAmBC,GAAnB,EAAwBV,KAAxB,EAA+B;EACpCW,EAAAA,MAAM,CAACC,cAAP,CAAsBH,IAAtB,EAA4BC,GAA5B,EAAiC;EAC/BG,IAAAA,UAAU,EAAE,KADmB;EAE/BC,IAAAA,YAAY,EAAE,KAFiB;EAG/Bd,IAAAA,KAAK,EAALA;EAH+B,GAAjC;EAKD;;ECTD;EACA;EACA;EACA;EACA;EACA,IAAMe,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B,KAA7B,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,MAAzD,CAAhB;;EAEA,IAAMC,cAAc,GAAGC,KAAK,CAACC,SAA7B;EACA;EACA;EACA;EACA;;EACA,IAAMC,YAAY,GAAGR,MAAM,CAACS,MAAP,CAAcJ,cAAd,CAArB;EACA;EACA;EACA;EACA;;EACAD,OAAO,CAACM,OAAR,CAAgB,UAACC,MAAD,EAAY;EAC1BH,EAAAA,YAAY,CAACG,MAAD,CAAZ,GAAuB,YAAmB;EACxClB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,IAApB;;EADwC,sCAANkB,IAAM;EAANA,MAAAA,IAAM;EAAA;;EAExC,QAAMC,MAAM,GAAGR,cAAc,CAACM,MAAD,CAAd,CAAuBG,KAAvB,CAA6B,IAA7B,EAAmCF,IAAnC,CAAf;EACA,QAAMG,EAAE,GAAG,KAAKC,MAAhB;EACA;EACJ;EACA;EACA;;EACI,QAAIC,QAAJ;;EAEA,YAAQN,MAAR;EACE,WAAK,MAAL;EACA,WAAK,SAAL;EACEM,QAAAA,QAAQ,GAAGL,IAAX;EACA;;EACF,WAAK,QAAL;EACEK,QAAAA,QAAQ,GAAGL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EACA;EAPJ;;EAYA,QAAID,QAAJ,EAAc;EACZF,MAAAA,EAAE,CAACI,aAAH,CAAiBF,QAAjB;EACD;;EAED,WAAOJ,MAAP;EACD,GA3BD;EA4BD,CA7BD;;ECdO,SAASO,OAAT,CAAiBtB,IAAjB,EAAuB;EAC5B,MAAI,CAACF,QAAQ,CAACE,IAAD,CAAb,EAAqB;EACnB;EACD;;EAED,SAAO,IAAIuB,QAAJ,CAAavB,IAAb,CAAP;EACD;;MAEKuB;EACJ;EACF;EACA;EACA;EACA;EACA;EACE,oBAAYhC,KAAZ,EAAmB;EAAA;;EACjB;EACAQ,IAAAA,GAAG,CAACR,KAAD,EAAQ,QAAR,EAAkB,IAAlB,CAAH;;EAEA,QAAIiB,KAAK,CAACgB,OAAN,CAAcjC,KAAd,CAAJ,EAA0B;EACxBA,MAAAA,KAAK,CAACkC,SAAN,GAAkBf,YAAlB;EACA,WAAKW,aAAL,CAAmB9B,KAAnB;EACD,KAHD,MAGO;EACL,WAAKmC,IAAL,CAAUnC,KAAV;EACD;EACF;;;;aACD,cAAKS,IAAL,EAAW;EACTE,MAAAA,MAAM,CAACyB,IAAP,CAAY3B,IAAZ,EAAkBY,OAAlB,CAA0B,UAACX,GAAD;EAAA,eAAS2B,cAAc,CAAC5B,IAAD,EAAOC,GAAP,EAAYD,IAAI,CAACC,GAAD,CAAhB,CAAvB;EAAA,OAA1B;EACD;;;aACD,uBAAcD,IAAd,EAAoB;EAClBA,MAAAA,IAAI,CAACY,OAAL,CAAa,UAACiB,IAAD;EAAA,eAAUP,OAAO,CAACO,IAAD,CAAjB;EAAA,OAAb;EACD;;;;;;EAGH,SAASD,cAAT,CAAwB5B,IAAxB,EAA8BC,GAA9B,EAAmCV,KAAnC,EAA0C;EACxC;EACA+B,EAAAA,OAAO,CAAC/B,KAAD,CAAP;EAEAW,EAAAA,MAAM,CAACC,cAAP,CAAsBH,IAAtB,EAA4BC,GAA5B,EAAiC;EAC/B6B,IAAAA,GAD+B,iBACzB;EACJnC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,GAAtB;EACA,aAAOV,KAAP;EACD,KAJ8B;EAK/BwC,IAAAA,GAL+B,eAK3BC,MAL2B,EAKnB;EACV,UAAIA,MAAM,KAAKzC,KAAf,EAAsB;EACpB;EACD;;EACDI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,GAAtB,EAJU;;EAMVqB,MAAAA,OAAO,CAACU,MAAD,CAAP;EACAzC,MAAAA,KAAK,GAAGyC,MAAR;EACD;EAb8B,GAAjC;EAeD;;ECtDM,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAD4B;;EAG5B,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAAC7B,OAAT,EAAkB;;EAGlB,MAAI6B,IAAI,CAACnC,IAAT,EAAe;EACbsC,IAAAA,QAAQ,CAACJ,EAAD,CAAR;EACD;;EACD,MAAIC,IAAI,CAACI,QAAT,EAAmB;;EAGnB,MAAIJ,IAAI,CAACK,KAAT,EAAgB;EAGjB;;EAID,SAASF,QAAT,CAAkBJ,EAAlB,EAAsB;EACpB,MAAIlC,IAAI,GAAGkC,EAAE,CAACE,QAAH,CAAYpC,IAAvB;EACAkC,EAAAA,EAAE,CAACO,KAAH,GAAWzC,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC0C,IAAL,CAAUR,EAAV,CAA7B,GAA6ClC,IAA/D;EACA;EACF;EACA;EACA;EACA;;EACEsB,EAAAA,OAAO,CAACtB,IAAD,CAAP;EACD;;EC9BM,SAAS2C,SAAT,CAAmBC,GAAnB,EAAwB;EAC7B;EACF;EACA;EACA;EACEA,EAAAA,GAAG,CAACnC,SAAJ,CAAcoC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,QAAMZ,EAAE,GAAG,IAAX;EAEAA,IAAAA,EAAE,CAACE,QAAH,GAAcU,OAAd,CAHuC;;EAKvCb,IAAAA,SAAS,CAACC,EAAD,CAAT,CALuC;;EAQvC,QAAIA,EAAE,CAACE,QAAH,CAAYW,EAAhB,EAAoB;EAClBb,MAAAA,EAAE,CAACc,MAAH,CAAUd,EAAE,CAACE,QAAH,CAAYW,EAAtB;EACD;EACF,GAXD;;EAYAH,EAAAA,GAAG,CAACnC,SAAJ,CAAcuC,MAAd,GAAuB,UAAUD,EAAV,EAAc;EACnC,QAAMb,EAAE,GAAG,IAAX;EACA,QAAMY,OAAO,GAAGZ,EAAE,CAACE,QAAnB;EACAW,IAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAT,CAAuBH,EAAvB,CAAL;;EAEA,QAAI,CAACD,OAAO,CAACjD,MAAb,EAAqB;EACnB,UAAIH,QAAQ,GAAGoD,OAAO,CAACpD,QAAvB;;EACA,UAAI,CAACA,QAAD,IAAaqD,EAAjB,EAAqB;EACnBrD,QAAAA,QAAQ,GAAGqD,EAAE,CAACI,SAAd;EACD;;EAED,UAAMtD,MAAM,GAAGJ,iBAAiB,CAACC,QAAD,CAAhC;EACAoD,MAAAA,OAAO,CAACjD,MAAR,GAAiBA,MAAjB;EACD;EACF,GAdD;EAeD;;EClCD;EACA;EACA;EACA;;EACA,SAAS+C,GAAT,CAAaE,OAAb,EAAsB;EACpB,OAAKD,KAAL,CAAWC,OAAX;EACD;EACD;EACA;EACA;;;EACAH,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}